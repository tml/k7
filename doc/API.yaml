# == K7 API Specification
# -- Version: 2009-04-15
# 
# This document contains the API specification (draft) for the K7 JavaScript environment. It's
# a global tree definition of the modules, classes, functions and values that are part of the
# K7 environment.
#
# The environments conforms to a naming convention based on the existing
# conventions used in ECMAScript, which are based on the Java naming conventions.
#
# Here is how K7 elements should be named:
#
# - modules:    lowercase, dot-separated ("system","system.posix")
# - constants:  UPPERCASE ("VERSION")
# - globals:    CamelCase ("SystemPath","LoadedModules")
# - functions:  camelCase ("print", "loadModule")
# - arguments:  camelCase ("parameter", "anotherParameter")
# - properties: camelCase ("length","sortedElements")
# - classes:    CamelCase ("Array","SortedArray")
# - methods:    camelCase ("Array.length", "SortedArray.sortBy")
#
# When binding standard libraries (as in ISO-standard, like POSIX) just keep the
# exact same name, to make it easy for people familiar with the low-level API to
# use the exact same function. Pure JavaScript wrappers can be written to make
# the API more consistent with JavaScript naming conventions.
#
# When writing new modules, they should fit in the following tree of modules.
core:
    modules:
        PATH
        ensure
        load
        unload
        get
        has
    concurrency:pure JS
        Channel
        Future
        Coroutine
        Thread
        Mutex
        Semaphore
        RendezVous
        libtask:
            yield
            exit
            current
            
system:
    engine:
        getState
        setState
        snapshot
        unsnapshot
    shell:
        stdin
        stdout
        argv
        env
        exec
        eval
    posix:
        fopen
        fread
        fwrite
        fseek
        fclose
    io:
        File:pure JS
            open
            close
            read
            write
            seek
            stat
---
db:
    tokyo
    bsddb
    mysql
---
net:
    http:
        server:
            fastcgi:
        client:
            curl:
---
lang:
    python
---
data:
    structures:
        tree:
            Node
    formats:
        xml:
            fromString
            fromFile
            toString
            toFile
        yaml:
            fromString
            fromFile
            toString
            toFile
        json:
            fromString
            fromFile
            toString
            toFile
        csv:
            fromString
            fromFile
            toString
            toFile
# EOF
